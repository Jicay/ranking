openapi: "3.0.3"
info:
  title: "Players ranking API"
  description: "Service which allows to manage the player of a competition"
  version: "1.0.0"
servers:
- url: "http://localhost:8080"
paths:
  /players:
    delete:
      description: "Delete all players"
      responses:
        "204":
          description: "No Content"
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Void"
    get:
      description: "Retrieve all players of a competition, ordered by ranks"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PlayerDTO"
    post:
      description: "Create a player using its name"
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/PlayerCreationDTO"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "201":
          description: "Created"
          content:
            text/plain:
              schema:
                type: "string"
  /players/{name}:
    get:
      description: "Get player by its name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing name"
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/PlayerDTO"
    patch:
      description: "Update the points of a player"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/PointsDTO"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing name"
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/PlayerDTO"
components:
  schemas:
    Void:
      type: "object"
      properties: {}
    PlayerDTO:
      type: "object"
      properties:
        name:
          type: "string"
        ranking:
          type: "integer"
          format: "int32"
        points:
          type: "integer"
          format: "int32"
    PlayerCreationDTO:
      type: "object"
      properties:
        name:
          type: "string"
    PointsDTO:
      type: "object"
      properties:
        points:
          type: "integer"
          format: "int32"